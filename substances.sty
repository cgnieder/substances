\RequirePackage{ expl3 , xparse , l3keys2e , xtemplate , chemmacros }
\ProvidesExplPackage
  {substances}
  {2012/07/20}
  {0.1}
  {A Chemical Database}

% ----------------------------------------------------------------------------
% variables:
\prop_new:N  \l_substances_properties_pre_prop
\prop_new:N  \l_substances_properties_post_prop

\seq_new:N   \l_substances_required_seq
\seq_new:N   \l_substances_chemicals_seq

\clist_new:N \l_substances_chemicals_clist

\bool_new:N  \l_substances_strict_bool
\bool_new:N  \l_substances_index_entry_bool
\bool_new:N  \l_substances_imakeidx_bool
\bool_new:N  \l_substances_multind_bool

\tl_new:N    \l_substances_style_tl
\tl_set:Nn   \l_substances_style_tl { default }

\AtBeginDocument
  {
    \@ifpackageloaded { imakeidx }
      { \bool_set_true:N \l_substances_imakeidx_bool } {}
    \@ifpackageloaded { multind }
      { \bool_set_true:N \l_substances_multind_bool } {}
  }

% ----------------------------------------------------------------------------
% messages:
\cs_new:Npn \substances_msg:nnn #1#2#3
  {
    \bool_if:NTF \l_substances_strict_bool
      { \msg_error:nnxx { substances } { #1 } { #2 } { #3 } }
      { \msg_warning:nnxx { substances } { #1 } { #2 } { #3 } }
  }

\msg_new:nnnn { substances } { property-missing }
  { Property~`#2'~not~defined~for~substance~`#1'~\msg_line_context:. }
  {
    You~called~property~`#2'~for~substance~`#1'~\mgs_line_context:.~It~seems~
    though~that~you~haven't~defined~it,~yet.
  }

\msg_new:nnnn { substances } { dadabase-missing }
  { I~can't~find~the~database~file~`#1'~\msg_line_context:. }
  {
    You~requested~the~database~file~`#1'~\msg_line_context:,~but~apparently~
    it~is~missing.~Maybe~you've~mispelled?
  }

\msg_new:nnnn { substances } { required-field }
  { The~field~`#1'~is~missing~for~substance~`#2'~\msg_line_context:. }
  {
    You~declared~the~the~substance~#2~\msg_line_context:,~but~forgot~
    to~add~the~required~property~#1.
  }

\msg_new:nnnn { substances } { style-missing }
  { I~can't~find~the~file~`substances_#1.def'. }
  {
    You~specified~the~style~`#1'~which~means~you~want~me~to~load~the~file~
    `substances_#1.def'~but~I~can't~find~it.~Perhaps~you've~mispelled?~
    Anyway~I'm~loading~the~`default'~style~instead.
  }

% ----------------------------------------------------------------------------
% options
\keys_define:nn { substances / options }
  {
    strict   .bool_set:N = \l_substances_strict_bool ,
    draft    .code:n     = \bool_set_true:N \l_substances_strict_bool ,
    final    .code:n     = \bool_set_false:N \l_substances_strict_bool ,
    index    .bool_set:N = \l_substances_index_entry_bool ,
    style    .tl_set:N   = \l_substances_style_tl
  }

\ProcessKeysOptions { substances / options }

% ----------------------------------------------------------------------------
% define new property fields:
\cs_new:Npn \substances_define_property_field:nnnn #1#2#3#4
  {
    \IfBooleanT { #1 }
      { \seq_put_right:Nn \l_substances_required_seq { #2 } }
    \prop_if_exist:cF { l_substances_#2_prop }
     { \prop_new:c { l_substances_#2_prop } }
    \IfNoValueTF { #3 }
      { \prop_put:Nnn \l_substances_properties_pre_prop { #2 } { } }
      {
        \tl_if_blank:nTF { #3 }
          { \prop_put:Nnn \l_substances_properties_pre_prop { #2 } { } }
          { \prop_put:Nnn \l_substances_properties_pre_prop { #2 } { #3 } }
      }
    \IfNoValueTF { #4 }
      { \prop_put:Nnn \l_substances_properties_post_prop { #2 } { } }
      { \prop_put:Nnn \l_substances_properties_post_prop { #2 } { #4 } }
  }

\NewDocumentCommand \DeclareSubstanceProperty { smoo }
  { \substances_define_property_field:nnnn { #1 } { #2 } { #3 } { #4 } }
\@onlypreamble\DeclareSubstanceProperty

% ----------------------------------------------------------------------------
% declare new substance entry:
\cs_new:Npn \substances_declare_substance:nn #1#2
  {
    \seq_put_right:Nn \l_substances_chemicals_seq { #1 }
    \clist_put_right:Nn \l_substances_chemicals_clist { #1 }
    \prop_map_inline:Nn \l_substances_properties_pre_prop
      {
        \tl_set:Nn \l_tmpa_tl { ##2 }
        \prop_get:NnN \l_substances_properties_post_prop { ##1 } \l_tmpb_tl
        \substances_add_property:nnVV { #1 } { ##1 } \l_tmpa_tl \l_tmpb_tl
      }
    \keys_set:nn { substances / #1 } { #2 }
    \seq_map_inline:Nn \l_substances_required_seq
      {
        \group_begin:
          \bool_set_true:N \l_substances_strict_bool
          \prop_if_in:cnF { l_substances_##1_prop } { #1 }
            { \substances_msg:nnn { required-field } { ##1 } { #1 } }
        \group_end:
      }
  }

\cs_new:Npn \substances_add_property:nnnn #1#2#3#4
  {
    \keys_define:nn { substances / #1 }
      { #2 .code:n = \prop_put:cnn { l_substances_#2_prop } { #1 } { #3{##1}#4 } }
  }
\cs_generate_variant:Nn \substances_add_property:nnnn { nnVV }

\NewDocumentCommand \DeclareSubstance { mm }
  { \substances_declare_substance:nn { #1 } { #2 } }
\@onlypreamble\DeclareSubstance

% ----------------------------------------------------------------------------
% recover values:
\cs_new:Npn \substances_get_property:nn #1#2
  {
    \prop_if_in:cnTF { l_substances_#2_prop } { #1 }
      { \prop_get:cn { l_substances_#2_prop } { #1 } }
      {
        \textbf{??}
        \substances_msg:nnn { property-missing } { #1 } { #2 }
      }
  }

% some commands for creating user macros or whatever:
\NewDocumentCommand \GetSubstanceProperty { mm }
  { \substances_get_property:nn { #1 } { #2 } }

\NewDocumentCommand \ForAllSubstancesDo {}
  { \seq_map_inline:Nn \l_substances_chemicals_seq }

\cs_new_eq:NN \AllSubstancesSequence \l_substances_chemicals_seq
\cs_new_eq:NN \AllSubstancesClist \l_substances_chemicals_clist

% ----------------------------------------------------------------------------
% user command:
\NewDocumentCommand \chem { soomo }
  {
    \IfNoValueF { #2 } { #2 }
    \IfNoValueTF { #5 }
      {
        \IfBooleanTF { #1 }
          { \substances_get_property:nn { #4 } { alt } }
          { \substances_get_property:nn { #4 } { name } }
      }
      { \substances_get_property:nn { #4 } { #5 } }
    \IfNoValueF { #3 } { #3 }
    \bool_if:NT \l_substances_index_entry_bool
      { \substances_index_entry:n { #4 } }
  }

% ----------------------------------------------------------------------------
% index command to add an entry to the chemicals list if the option
% `index=true' is used:
\cs_new:Npn \substances_index:nn #1#2
  {
    \bool_if:NTF \l_substances_imakeidx_bool
      { \index [ #1 ] { #2 } }
      {
        \bool_if:NTF \l_substances_multind_bool
          { \index { #1 } { #2 } }
          { \index { #2 } }
      }
  }
\cs_generate_variant:Nn \substances_index:nn { no }

\cs_new:Npn \substances_index_entry:n #1
  { \UseInstance { substances-index } { default } { #1 } }

% let's use xtemplate's features for possible customization later:
\DeclareObjectType { substances-index } { 1 }

\DeclareTemplateInterface { substances-index } { standard } { 1 }
  {
    alternative-entry : boolean = true ,
    alternative-name  : boolean = true
  }

\DeclareTemplateCode { substances-index } { standard } { 1 }
  {
    alternative-entry = \l_substances_index_alternative_entry_bool ,
    alternative-name  = \l_substances_index_alternative_name_bool ,
  }
  {
    \AssignTemplateKeys
    \bool_if:nTF
      {
        \l_substances_index_alternative_name_bool &&
        \prop_if_in_p:Nn \l_substances_alt_prop { #1 }
      }
      {
        \substances_index:no { \c_job_name_tl -chem }
          {
            \GetSubstanceProperty { #1 } { name } ~
            ( \GetSubstanceProperty { #1 } { alt } )
          }
      }
      {
        \substances_index:no { \c_job_name_tl -chem }
          { \GetSubstanceProperty { #1 } { name } }
      }
    \bool_if:nT
      {
        \l_substances_index_alternative_entry_bool &&
        \l_substances_index_alternative_name_bool &&
        \prop_if_in_p:Nn \l_substances_alt_prop { #1 }
      }
      {
        \substances_index:no { \c_job_name_tl -chem }
          {
            \GetSubstanceProperty { #1 } { alt } | see
              { \GetSubstanceProperty { #1 } { name } }
          }
      }
  }

\DeclareInstance { substances-index } { default } { standard } { }

% ----------------------------------------------------------------------------
% define some default fields:

\cs_new:Npn \@CAS #1-#2-#3 {#1-#2-#3}
\NewDocumentCommand \CAS { m } { \@CAS #1 }

\DeclareSubstanceProperty* { name } [\iupac]
\DeclareSubstanceProperty  { alt }  [\iupac]
\DeclareSubstanceProperty  { CAS }  [\CAS]
\DeclareSubstanceProperty  { PubChem }

% ----------------------------------------------------------------------------
% load style file
\file_if_exist:nTF { substances_ \l_substances_style_tl .def }
  { \file_input:n { substances_ \l_substances_style_tl .def } }
  {
    \substances_msg:nnn { style-missing } { \l_substances_style_tl } { }
    \file_input:n { substances_default.def }
  }

\NewDocumentCommand \LoadSubstances { m }
  {
    \file_if_exist:nTF { #1.sub }
      { \file_input:n { #1.sub } }
      { \substances_msg:nnn { database-missing } { #1.sub } { } }
  }
\@onlypreamble\LoadSubstances

\tex_endinput:D

% TODO:
- der \chem{methane} shortcut sollte zugleich einen Glossar-Eintrag erzeugen
  (Option `glossaries=true') => Liste der Chemikalien
- add a \nocite{} equivalent for \chem => erst einen eigenen Formalismus f체r
  eine eigene Liste erstellen
- alle eintr채ge eine sequence und einer clist hinzuf체gen und einen wrapper f체r
  \seq_map_inline anbieten